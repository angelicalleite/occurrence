/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.gbif.occurrence.avro.model;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
@JsonIgnoreProperties({"schema"})
public class Occurrence extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Occurrence\",\"namespace\":\"org.gbif.occurrence.avro.model\",\"fields\":[{\"name\":\"key\",\"type\":[\"int\",\"null\"]},{\"name\":\"dataset_key\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"institution_code\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"collection_code\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"catalog_number\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"recorded_by\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"record_number\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"last_interpreted\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"taxon_key\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}],\"default\":null},{\"name\":\"kingdom_key\",\"type\":[\"int\",\"null\"]},{\"name\":\"phylum_key\",\"type\":[\"int\",\"null\"]},{\"name\":\"class_key\",\"type\":[\"int\",\"null\"]},{\"name\":\"order_key\",\"type\":[\"int\",\"null\"]},{\"name\":\"family_key\",\"type\":[\"int\",\"null\"]},{\"name\":\"genus_key\",\"type\":[\"int\",\"null\"]},{\"name\":\"subgenus_key\",\"type\":[\"int\",\"null\"]},{\"name\":\"species_key\",\"type\":[\"int\",\"null\"]},{\"name\":\"country\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"continent\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"publishing_country\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"latitude\",\"type\":[\"double\",\"null\"]},{\"name\":\"longitude\",\"type\":[\"double\",\"null\"]},{\"name\":\"coordinate\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"year\",\"type\":[\"int\",\"null\"]},{\"name\":\"month\",\"type\":[\"int\",\"null\"]},{\"name\":\"event_date\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"basis_of_record\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"type_status\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"spatial_issues\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"has_coordinate\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"elevation\",\"type\":[\"int\",\"null\"]},{\"name\":\"depth\",\"type\":[\"int\",\"null\"]},{\"name\":\"establishment_means\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"occurrence_id\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"media_type\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"issue\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"scientific_name\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"full_text\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Integer key;
  @Deprecated public java.lang.String dataset_key;
  @Deprecated public java.lang.String institution_code;
  @Deprecated public java.lang.String collection_code;
  @Deprecated public java.lang.String catalog_number;
  @Deprecated public java.lang.String recorded_by;
  @Deprecated public java.lang.String record_number;
  @Deprecated public java.lang.String last_interpreted;
  @Deprecated public java.util.List<java.lang.Integer> taxon_key;
  @Deprecated public java.lang.Integer kingdom_key;
  @Deprecated public java.lang.Integer phylum_key;
  @Deprecated public java.lang.Integer class_key;
  @Deprecated public java.lang.Integer order_key;
  @Deprecated public java.lang.Integer family_key;
  @Deprecated public java.lang.Integer genus_key;
  @Deprecated public java.lang.Integer subgenus_key;
  @Deprecated public java.lang.Integer species_key;
  @Deprecated public java.lang.String country;
  @Deprecated public java.lang.String continent;
  @Deprecated public java.lang.String publishing_country;
  @Deprecated public java.lang.Double latitude;
  @Deprecated public java.lang.Double longitude;
  @Deprecated public java.lang.String coordinate;
  @Deprecated public java.lang.Integer year;
  @Deprecated public java.lang.Integer month;
  @Deprecated public java.lang.String event_date;
  @Deprecated public java.lang.String basis_of_record;
  @Deprecated public java.lang.String type_status;
  @Deprecated public java.lang.Boolean spatial_issues;
  @Deprecated public java.lang.Boolean has_coordinate;
  @Deprecated public java.lang.Integer elevation;
  @Deprecated public java.lang.Integer depth;
  @Deprecated public java.lang.String establishment_means;
  @Deprecated public java.lang.String occurrence_id;
  @Deprecated public java.util.List<java.lang.String> media_type;
  @Deprecated public java.util.List<java.lang.String> issue;
  @Deprecated public java.lang.String scientific_name;
  @Deprecated public java.util.List<java.lang.String> full_text;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Occurrence() {}

  /**
   * All-args constructor.
   */
  public Occurrence(java.lang.Integer key, java.lang.String dataset_key, java.lang.String institution_code, java.lang.String collection_code, java.lang.String catalog_number, java.lang.String recorded_by, java.lang.String record_number, java.lang.String last_interpreted, java.util.List<java.lang.Integer> taxon_key, java.lang.Integer kingdom_key, java.lang.Integer phylum_key, java.lang.Integer class_key, java.lang.Integer order_key, java.lang.Integer family_key, java.lang.Integer genus_key, java.lang.Integer subgenus_key, java.lang.Integer species_key, java.lang.String country, java.lang.String continent, java.lang.String publishing_country, java.lang.Double latitude, java.lang.Double longitude, java.lang.String coordinate, java.lang.Integer year, java.lang.Integer month, java.lang.String event_date, java.lang.String basis_of_record, java.lang.String type_status, java.lang.Boolean spatial_issues, java.lang.Boolean has_coordinate, java.lang.Integer elevation, java.lang.Integer depth, java.lang.String establishment_means, java.lang.String occurrence_id, java.util.List<java.lang.String> media_type, java.util.List<java.lang.String> issue, java.lang.String scientific_name, java.util.List<java.lang.String> full_text) {
    this.key = key;
    this.dataset_key = dataset_key;
    this.institution_code = institution_code;
    this.collection_code = collection_code;
    this.catalog_number = catalog_number;
    this.recorded_by = recorded_by;
    this.record_number = record_number;
    this.last_interpreted = last_interpreted;
    this.taxon_key = taxon_key;
    this.kingdom_key = kingdom_key;
    this.phylum_key = phylum_key;
    this.class_key = class_key;
    this.order_key = order_key;
    this.family_key = family_key;
    this.genus_key = genus_key;
    this.subgenus_key = subgenus_key;
    this.species_key = species_key;
    this.country = country;
    this.continent = continent;
    this.publishing_country = publishing_country;
    this.latitude = latitude;
    this.longitude = longitude;
    this.coordinate = coordinate;
    this.year = year;
    this.month = month;
    this.event_date = event_date;
    this.basis_of_record = basis_of_record;
    this.type_status = type_status;
    this.spatial_issues = spatial_issues;
    this.has_coordinate = has_coordinate;
    this.elevation = elevation;
    this.depth = depth;
    this.establishment_means = establishment_means;
    this.occurrence_id = occurrence_id;
    this.media_type = media_type;
    this.issue = issue;
    this.scientific_name = scientific_name;
    this.full_text = full_text;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return key;
    case 1: return dataset_key;
    case 2: return institution_code;
    case 3: return collection_code;
    case 4: return catalog_number;
    case 5: return recorded_by;
    case 6: return record_number;
    case 7: return last_interpreted;
    case 8: return taxon_key;
    case 9: return kingdom_key;
    case 10: return phylum_key;
    case 11: return class_key;
    case 12: return order_key;
    case 13: return family_key;
    case 14: return genus_key;
    case 15: return subgenus_key;
    case 16: return species_key;
    case 17: return country;
    case 18: return continent;
    case 19: return publishing_country;
    case 20: return latitude;
    case 21: return longitude;
    case 22: return coordinate;
    case 23: return year;
    case 24: return month;
    case 25: return event_date;
    case 26: return basis_of_record;
    case 27: return type_status;
    case 28: return spatial_issues;
    case 29: return has_coordinate;
    case 30: return elevation;
    case 31: return depth;
    case 32: return establishment_means;
    case 33: return occurrence_id;
    case 34: return media_type;
    case 35: return issue;
    case 36: return scientific_name;
    case 37: return full_text;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: key = (java.lang.Integer)value$; break;
    case 1: dataset_key = (java.lang.String)value$; break;
    case 2: institution_code = (java.lang.String)value$; break;
    case 3: collection_code = (java.lang.String)value$; break;
    case 4: catalog_number = (java.lang.String)value$; break;
    case 5: recorded_by = (java.lang.String)value$; break;
    case 6: record_number = (java.lang.String)value$; break;
    case 7: last_interpreted = (java.lang.String)value$; break;
    case 8: taxon_key = (java.util.List<java.lang.Integer>)value$; break;
    case 9: kingdom_key = (java.lang.Integer)value$; break;
    case 10: phylum_key = (java.lang.Integer)value$; break;
    case 11: class_key = (java.lang.Integer)value$; break;
    case 12: order_key = (java.lang.Integer)value$; break;
    case 13: family_key = (java.lang.Integer)value$; break;
    case 14: genus_key = (java.lang.Integer)value$; break;
    case 15: subgenus_key = (java.lang.Integer)value$; break;
    case 16: species_key = (java.lang.Integer)value$; break;
    case 17: country = (java.lang.String)value$; break;
    case 18: continent = (java.lang.String)value$; break;
    case 19: publishing_country = (java.lang.String)value$; break;
    case 20: latitude = (java.lang.Double)value$; break;
    case 21: longitude = (java.lang.Double)value$; break;
    case 22: coordinate = (java.lang.String)value$; break;
    case 23: year = (java.lang.Integer)value$; break;
    case 24: month = (java.lang.Integer)value$; break;
    case 25: event_date = (java.lang.String)value$; break;
    case 26: basis_of_record = (java.lang.String)value$; break;
    case 27: type_status = (java.lang.String)value$; break;
    case 28: spatial_issues = (java.lang.Boolean)value$; break;
    case 29: has_coordinate = (java.lang.Boolean)value$; break;
    case 30: elevation = (java.lang.Integer)value$; break;
    case 31: depth = (java.lang.Integer)value$; break;
    case 32: establishment_means = (java.lang.String)value$; break;
    case 33: occurrence_id = (java.lang.String)value$; break;
    case 34: media_type = (java.util.List<java.lang.String>)value$; break;
    case 35: issue = (java.util.List<java.lang.String>)value$; break;
    case 36: scientific_name = (java.lang.String)value$; break;
    case 37: full_text = (java.util.List<java.lang.String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'key' field.
   */
  public java.lang.Integer getKey() {
    return key;
  }

  /**
   * Sets the value of the 'key' field.
   * @param value the value to set.
   */
  public void setKey(java.lang.Integer value) {
    this.key = value;
  }

  /**
   * Gets the value of the 'dataset_key' field.
   */
  public java.lang.String getDatasetKey() {
    return dataset_key;
  }

  /**
   * Sets the value of the 'dataset_key' field.
   * @param value the value to set.
   */
  public void setDatasetKey(java.lang.String value) {
    this.dataset_key = value;
  }

  /**
   * Gets the value of the 'institution_code' field.
   */
  public java.lang.String getInstitutionCode() {
    return institution_code;
  }

  /**
   * Sets the value of the 'institution_code' field.
   * @param value the value to set.
   */
  public void setInstitutionCode(java.lang.String value) {
    this.institution_code = value;
  }

  /**
   * Gets the value of the 'collection_code' field.
   */
  public java.lang.String getCollectionCode() {
    return collection_code;
  }

  /**
   * Sets the value of the 'collection_code' field.
   * @param value the value to set.
   */
  public void setCollectionCode(java.lang.String value) {
    this.collection_code = value;
  }

  /**
   * Gets the value of the 'catalog_number' field.
   */
  public java.lang.String getCatalogNumber() {
    return catalog_number;
  }

  /**
   * Sets the value of the 'catalog_number' field.
   * @param value the value to set.
   */
  public void setCatalogNumber(java.lang.String value) {
    this.catalog_number = value;
  }

  /**
   * Gets the value of the 'recorded_by' field.
   */
  public java.lang.String getRecordedBy() {
    return recorded_by;
  }

  /**
   * Sets the value of the 'recorded_by' field.
   * @param value the value to set.
   */
  public void setRecordedBy(java.lang.String value) {
    this.recorded_by = value;
  }

  /**
   * Gets the value of the 'record_number' field.
   */
  public java.lang.String getRecordNumber() {
    return record_number;
  }

  /**
   * Sets the value of the 'record_number' field.
   * @param value the value to set.
   */
  public void setRecordNumber(java.lang.String value) {
    this.record_number = value;
  }

  /**
   * Gets the value of the 'last_interpreted' field.
   */
  public java.lang.String getLastInterpreted() {
    return last_interpreted;
  }

  /**
   * Sets the value of the 'last_interpreted' field.
   * @param value the value to set.
   */
  public void setLastInterpreted(java.lang.String value) {
    this.last_interpreted = value;
  }

  /**
   * Gets the value of the 'taxon_key' field.
   */
  public java.util.List<java.lang.Integer> getTaxonKey() {
    return taxon_key;
  }

  /**
   * Sets the value of the 'taxon_key' field.
   * @param value the value to set.
   */
  public void setTaxonKey(java.util.List<java.lang.Integer> value) {
    this.taxon_key = value;
  }

  /**
   * Gets the value of the 'kingdom_key' field.
   */
  public java.lang.Integer getKingdomKey() {
    return kingdom_key;
  }

  /**
   * Sets the value of the 'kingdom_key' field.
   * @param value the value to set.
   */
  public void setKingdomKey(java.lang.Integer value) {
    this.kingdom_key = value;
  }

  /**
   * Gets the value of the 'phylum_key' field.
   */
  public java.lang.Integer getPhylumKey() {
    return phylum_key;
  }

  /**
   * Sets the value of the 'phylum_key' field.
   * @param value the value to set.
   */
  public void setPhylumKey(java.lang.Integer value) {
    this.phylum_key = value;
  }

  /**
   * Gets the value of the 'class_key' field.
   */
  public java.lang.Integer getClassKey() {
    return class_key;
  }

  /**
   * Sets the value of the 'class_key' field.
   * @param value the value to set.
   */
  public void setClassKey(java.lang.Integer value) {
    this.class_key = value;
  }

  /**
   * Gets the value of the 'order_key' field.
   */
  public java.lang.Integer getOrderKey() {
    return order_key;
  }

  /**
   * Sets the value of the 'order_key' field.
   * @param value the value to set.
   */
  public void setOrderKey(java.lang.Integer value) {
    this.order_key = value;
  }

  /**
   * Gets the value of the 'family_key' field.
   */
  public java.lang.Integer getFamilyKey() {
    return family_key;
  }

  /**
   * Sets the value of the 'family_key' field.
   * @param value the value to set.
   */
  public void setFamilyKey(java.lang.Integer value) {
    this.family_key = value;
  }

  /**
   * Gets the value of the 'genus_key' field.
   */
  public java.lang.Integer getGenusKey() {
    return genus_key;
  }

  /**
   * Sets the value of the 'genus_key' field.
   * @param value the value to set.
   */
  public void setGenusKey(java.lang.Integer value) {
    this.genus_key = value;
  }

  /**
   * Gets the value of the 'subgenus_key' field.
   */
  public java.lang.Integer getSubgenusKey() {
    return subgenus_key;
  }

  /**
   * Sets the value of the 'subgenus_key' field.
   * @param value the value to set.
   */
  public void setSubgenusKey(java.lang.Integer value) {
    this.subgenus_key = value;
  }

  /**
   * Gets the value of the 'species_key' field.
   */
  public java.lang.Integer getSpeciesKey() {
    return species_key;
  }

  /**
   * Sets the value of the 'species_key' field.
   * @param value the value to set.
   */
  public void setSpeciesKey(java.lang.Integer value) {
    this.species_key = value;
  }

  /**
   * Gets the value of the 'country' field.
   */
  public java.lang.String getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.String value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'continent' field.
   */
  public java.lang.String getContinent() {
    return continent;
  }

  /**
   * Sets the value of the 'continent' field.
   * @param value the value to set.
   */
  public void setContinent(java.lang.String value) {
    this.continent = value;
  }

  /**
   * Gets the value of the 'publishing_country' field.
   */
  public java.lang.String getPublishingCountry() {
    return publishing_country;
  }

  /**
   * Sets the value of the 'publishing_country' field.
   * @param value the value to set.
   */
  public void setPublishingCountry(java.lang.String value) {
    this.publishing_country = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   */
  public java.lang.Double getLatitude() {
    return latitude;
  }

  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(java.lang.Double value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   */
  public java.lang.Double getLongitude() {
    return longitude;
  }

  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(java.lang.Double value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'coordinate' field.
   */
  public java.lang.String getCoordinate() {
    return coordinate;
  }

  /**
   * Sets the value of the 'coordinate' field.
   * @param value the value to set.
   */
  public void setCoordinate(java.lang.String value) {
    this.coordinate = value;
  }

  /**
   * Gets the value of the 'year' field.
   */
  public java.lang.Integer getYear() {
    return year;
  }

  /**
   * Sets the value of the 'year' field.
   * @param value the value to set.
   */
  public void setYear(java.lang.Integer value) {
    this.year = value;
  }

  /**
   * Gets the value of the 'month' field.
   */
  public java.lang.Integer getMonth() {
    return month;
  }

  /**
   * Sets the value of the 'month' field.
   * @param value the value to set.
   */
  public void setMonth(java.lang.Integer value) {
    this.month = value;
  }

  /**
   * Gets the value of the 'event_date' field.
   */
  public java.lang.String getEventDate() {
    return event_date;
  }

  /**
   * Sets the value of the 'event_date' field.
   * @param value the value to set.
   */
  public void setEventDate(java.lang.String value) {
    this.event_date = value;
  }

  /**
   * Gets the value of the 'basis_of_record' field.
   */
  public java.lang.String getBasisOfRecord() {
    return basis_of_record;
  }

  /**
   * Sets the value of the 'basis_of_record' field.
   * @param value the value to set.
   */
  public void setBasisOfRecord(java.lang.String value) {
    this.basis_of_record = value;
  }

  /**
   * Gets the value of the 'type_status' field.
   */
  public java.lang.String getTypeStatus() {
    return type_status;
  }

  /**
   * Sets the value of the 'type_status' field.
   * @param value the value to set.
   */
  public void setTypeStatus(java.lang.String value) {
    this.type_status = value;
  }

  /**
   * Gets the value of the 'spatial_issues' field.
   */
  public java.lang.Boolean getSpatialIssues() {
    return spatial_issues;
  }

  /**
   * Sets the value of the 'spatial_issues' field.
   * @param value the value to set.
   */
  public void setSpatialIssues(java.lang.Boolean value) {
    this.spatial_issues = value;
  }

  /**
   * Gets the value of the 'has_coordinate' field.
   */
  public java.lang.Boolean getHasCoordinate() {
    return has_coordinate;
  }

  /**
   * Sets the value of the 'has_coordinate' field.
   * @param value the value to set.
   */
  public void setHasCoordinate(java.lang.Boolean value) {
    this.has_coordinate = value;
  }

  /**
   * Gets the value of the 'elevation' field.
   */
  public java.lang.Integer getElevation() {
    return elevation;
  }

  /**
   * Sets the value of the 'elevation' field.
   * @param value the value to set.
   */
  public void setElevation(java.lang.Integer value) {
    this.elevation = value;
  }

  /**
   * Gets the value of the 'depth' field.
   */
  public java.lang.Integer getDepth() {
    return depth;
  }

  /**
   * Sets the value of the 'depth' field.
   * @param value the value to set.
   */
  public void setDepth(java.lang.Integer value) {
    this.depth = value;
  }

  /**
   * Gets the value of the 'establishment_means' field.
   */
  public java.lang.String getEstablishmentMeans() {
    return establishment_means;
  }

  /**
   * Sets the value of the 'establishment_means' field.
   * @param value the value to set.
   */
  public void setEstablishmentMeans(java.lang.String value) {
    this.establishment_means = value;
  }

  /**
   * Gets the value of the 'occurrence_id' field.
   */
  public java.lang.String getOccurrenceId() {
    return occurrence_id;
  }

  /**
   * Sets the value of the 'occurrence_id' field.
   * @param value the value to set.
   */
  public void setOccurrenceId(java.lang.String value) {
    this.occurrence_id = value;
  }

  /**
   * Gets the value of the 'media_type' field.
   */
  public java.util.List<java.lang.String> getMediaType() {
    return media_type;
  }

  /**
   * Sets the value of the 'media_type' field.
   * @param value the value to set.
   */
  public void setMediaType(java.util.List<java.lang.String> value) {
    this.media_type = value;
  }

  /**
   * Gets the value of the 'issue' field.
   */
  public java.util.List<java.lang.String> getIssue() {
    return issue;
  }

  /**
   * Sets the value of the 'issue' field.
   * @param value the value to set.
   */
  public void setIssue(java.util.List<java.lang.String> value) {
    this.issue = value;
  }

  /**
   * Gets the value of the 'scientific_name' field.
   */
  public java.lang.String getScientificName() {
    return scientific_name;
  }

  /**
   * Sets the value of the 'scientific_name' field.
   * @param value the value to set.
   */
  public void setScientificName(java.lang.String value) {
    this.scientific_name = value;
  }

  /**
   * Gets the value of the 'full_text' field.
   */
  public java.util.List<java.lang.String> getFullText() {
    return full_text;
  }

  /**
   * Sets the value of the 'full_text' field.
   * @param value the value to set.
   */
  public void setFullText(java.util.List<java.lang.String> value) {
    this.full_text = value;
  }

  /** Creates a new Occurrence RecordBuilder */
  public static org.gbif.occurrence.avro.model.Occurrence.Builder newBuilder() {
    return new org.gbif.occurrence.avro.model.Occurrence.Builder();
  }

  /** Creates a new Occurrence RecordBuilder by copying an existing Builder */
  public static org.gbif.occurrence.avro.model.Occurrence.Builder newBuilder(org.gbif.occurrence.avro.model.Occurrence.Builder other) {
    return new org.gbif.occurrence.avro.model.Occurrence.Builder(other);
  }

  /** Creates a new Occurrence RecordBuilder by copying an existing Occurrence instance */
  public static org.gbif.occurrence.avro.model.Occurrence.Builder newBuilder(org.gbif.occurrence.avro.model.Occurrence other) {
    return new org.gbif.occurrence.avro.model.Occurrence.Builder(other);
  }

  /**
   * RecordBuilder for Occurrence instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Occurrence>
    implements org.apache.avro.data.RecordBuilder<Occurrence> {

    private java.lang.Integer key;
    private java.lang.String dataset_key;
    private java.lang.String institution_code;
    private java.lang.String collection_code;
    private java.lang.String catalog_number;
    private java.lang.String recorded_by;
    private java.lang.String record_number;
    private java.lang.String last_interpreted;
    private java.util.List<java.lang.Integer> taxon_key;
    private java.lang.Integer kingdom_key;
    private java.lang.Integer phylum_key;
    private java.lang.Integer class_key;
    private java.lang.Integer order_key;
    private java.lang.Integer family_key;
    private java.lang.Integer genus_key;
    private java.lang.Integer subgenus_key;
    private java.lang.Integer species_key;
    private java.lang.String country;
    private java.lang.String continent;
    private java.lang.String publishing_country;
    private java.lang.Double latitude;
    private java.lang.Double longitude;
    private java.lang.String coordinate;
    private java.lang.Integer year;
    private java.lang.Integer month;
    private java.lang.String event_date;
    private java.lang.String basis_of_record;
    private java.lang.String type_status;
    private java.lang.Boolean spatial_issues;
    private java.lang.Boolean has_coordinate;
    private java.lang.Integer elevation;
    private java.lang.Integer depth;
    private java.lang.String establishment_means;
    private java.lang.String occurrence_id;
    private java.util.List<java.lang.String> media_type;
    private java.util.List<java.lang.String> issue;
    private java.lang.String scientific_name;
    private java.util.List<java.lang.String> full_text;

    /** Creates a new Builder */
    private Builder() {
      super(org.gbif.occurrence.avro.model.Occurrence.SCHEMA$);
    }

    /** Creates a Builder by copying an existing Builder */
    private Builder(org.gbif.occurrence.avro.model.Occurrence.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.key)) {
        this.key = data().deepCopy(fields()[0].schema(), other.key);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dataset_key)) {
        this.dataset_key = data().deepCopy(fields()[1].schema(), other.dataset_key);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.institution_code)) {
        this.institution_code = data().deepCopy(fields()[2].schema(), other.institution_code);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.collection_code)) {
        this.collection_code = data().deepCopy(fields()[3].schema(), other.collection_code);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.catalog_number)) {
        this.catalog_number = data().deepCopy(fields()[4].schema(), other.catalog_number);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.recorded_by)) {
        this.recorded_by = data().deepCopy(fields()[5].schema(), other.recorded_by);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.record_number)) {
        this.record_number = data().deepCopy(fields()[6].schema(), other.record_number);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.last_interpreted)) {
        this.last_interpreted = data().deepCopy(fields()[7].schema(), other.last_interpreted);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.taxon_key)) {
        this.taxon_key = data().deepCopy(fields()[8].schema(), other.taxon_key);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.kingdom_key)) {
        this.kingdom_key = data().deepCopy(fields()[9].schema(), other.kingdom_key);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.phylum_key)) {
        this.phylum_key = data().deepCopy(fields()[10].schema(), other.phylum_key);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.class_key)) {
        this.class_key = data().deepCopy(fields()[11].schema(), other.class_key);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.order_key)) {
        this.order_key = data().deepCopy(fields()[12].schema(), other.order_key);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.family_key)) {
        this.family_key = data().deepCopy(fields()[13].schema(), other.family_key);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.genus_key)) {
        this.genus_key = data().deepCopy(fields()[14].schema(), other.genus_key);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.subgenus_key)) {
        this.subgenus_key = data().deepCopy(fields()[15].schema(), other.subgenus_key);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.species_key)) {
        this.species_key = data().deepCopy(fields()[16].schema(), other.species_key);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.country)) {
        this.country = data().deepCopy(fields()[17].schema(), other.country);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.continent)) {
        this.continent = data().deepCopy(fields()[18].schema(), other.continent);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.publishing_country)) {
        this.publishing_country = data().deepCopy(fields()[19].schema(), other.publishing_country);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.latitude)) {
        this.latitude = data().deepCopy(fields()[20].schema(), other.latitude);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.longitude)) {
        this.longitude = data().deepCopy(fields()[21].schema(), other.longitude);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.coordinate)) {
        this.coordinate = data().deepCopy(fields()[22].schema(), other.coordinate);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.year)) {
        this.year = data().deepCopy(fields()[23].schema(), other.year);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.month)) {
        this.month = data().deepCopy(fields()[24].schema(), other.month);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.event_date)) {
        this.event_date = data().deepCopy(fields()[25].schema(), other.event_date);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.basis_of_record)) {
        this.basis_of_record = data().deepCopy(fields()[26].schema(), other.basis_of_record);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.type_status)) {
        this.type_status = data().deepCopy(fields()[27].schema(), other.type_status);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.spatial_issues)) {
        this.spatial_issues = data().deepCopy(fields()[28].schema(), other.spatial_issues);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.has_coordinate)) {
        this.has_coordinate = data().deepCopy(fields()[29].schema(), other.has_coordinate);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.elevation)) {
        this.elevation = data().deepCopy(fields()[30].schema(), other.elevation);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.depth)) {
        this.depth = data().deepCopy(fields()[31].schema(), other.depth);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.establishment_means)) {
        this.establishment_means = data().deepCopy(fields()[32].schema(), other.establishment_means);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.occurrence_id)) {
        this.occurrence_id = data().deepCopy(fields()[33].schema(), other.occurrence_id);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.media_type)) {
        this.media_type = data().deepCopy(fields()[34].schema(), other.media_type);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.issue)) {
        this.issue = data().deepCopy(fields()[35].schema(), other.issue);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.scientific_name)) {
        this.scientific_name = data().deepCopy(fields()[36].schema(), other.scientific_name);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.full_text)) {
        this.full_text = data().deepCopy(fields()[37].schema(), other.full_text);
        fieldSetFlags()[37] = true;
      }
    }

    /** Creates a Builder by copying an existing Occurrence instance */
    private Builder(org.gbif.occurrence.avro.model.Occurrence other) {
            super(org.gbif.occurrence.avro.model.Occurrence.SCHEMA$);
      if (isValidValue(fields()[0], other.key)) {
        this.key = data().deepCopy(fields()[0].schema(), other.key);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dataset_key)) {
        this.dataset_key = data().deepCopy(fields()[1].schema(), other.dataset_key);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.institution_code)) {
        this.institution_code = data().deepCopy(fields()[2].schema(), other.institution_code);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.collection_code)) {
        this.collection_code = data().deepCopy(fields()[3].schema(), other.collection_code);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.catalog_number)) {
        this.catalog_number = data().deepCopy(fields()[4].schema(), other.catalog_number);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.recorded_by)) {
        this.recorded_by = data().deepCopy(fields()[5].schema(), other.recorded_by);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.record_number)) {
        this.record_number = data().deepCopy(fields()[6].schema(), other.record_number);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.last_interpreted)) {
        this.last_interpreted = data().deepCopy(fields()[7].schema(), other.last_interpreted);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.taxon_key)) {
        this.taxon_key = data().deepCopy(fields()[8].schema(), other.taxon_key);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.kingdom_key)) {
        this.kingdom_key = data().deepCopy(fields()[9].schema(), other.kingdom_key);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.phylum_key)) {
        this.phylum_key = data().deepCopy(fields()[10].schema(), other.phylum_key);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.class_key)) {
        this.class_key = data().deepCopy(fields()[11].schema(), other.class_key);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.order_key)) {
        this.order_key = data().deepCopy(fields()[12].schema(), other.order_key);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.family_key)) {
        this.family_key = data().deepCopy(fields()[13].schema(), other.family_key);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.genus_key)) {
        this.genus_key = data().deepCopy(fields()[14].schema(), other.genus_key);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.subgenus_key)) {
        this.subgenus_key = data().deepCopy(fields()[15].schema(), other.subgenus_key);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.species_key)) {
        this.species_key = data().deepCopy(fields()[16].schema(), other.species_key);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.country)) {
        this.country = data().deepCopy(fields()[17].schema(), other.country);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.continent)) {
        this.continent = data().deepCopy(fields()[18].schema(), other.continent);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.publishing_country)) {
        this.publishing_country = data().deepCopy(fields()[19].schema(), other.publishing_country);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.latitude)) {
        this.latitude = data().deepCopy(fields()[20].schema(), other.latitude);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.longitude)) {
        this.longitude = data().deepCopy(fields()[21].schema(), other.longitude);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.coordinate)) {
        this.coordinate = data().deepCopy(fields()[22].schema(), other.coordinate);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.year)) {
        this.year = data().deepCopy(fields()[23].schema(), other.year);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.month)) {
        this.month = data().deepCopy(fields()[24].schema(), other.month);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.event_date)) {
        this.event_date = data().deepCopy(fields()[25].schema(), other.event_date);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.basis_of_record)) {
        this.basis_of_record = data().deepCopy(fields()[26].schema(), other.basis_of_record);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.type_status)) {
        this.type_status = data().deepCopy(fields()[27].schema(), other.type_status);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.spatial_issues)) {
        this.spatial_issues = data().deepCopy(fields()[28].schema(), other.spatial_issues);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.has_coordinate)) {
        this.has_coordinate = data().deepCopy(fields()[29].schema(), other.has_coordinate);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.elevation)) {
        this.elevation = data().deepCopy(fields()[30].schema(), other.elevation);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.depth)) {
        this.depth = data().deepCopy(fields()[31].schema(), other.depth);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.establishment_means)) {
        this.establishment_means = data().deepCopy(fields()[32].schema(), other.establishment_means);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.occurrence_id)) {
        this.occurrence_id = data().deepCopy(fields()[33].schema(), other.occurrence_id);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.media_type)) {
        this.media_type = data().deepCopy(fields()[34].schema(), other.media_type);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.issue)) {
        this.issue = data().deepCopy(fields()[35].schema(), other.issue);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.scientific_name)) {
        this.scientific_name = data().deepCopy(fields()[36].schema(), other.scientific_name);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.full_text)) {
        this.full_text = data().deepCopy(fields()[37].schema(), other.full_text);
        fieldSetFlags()[37] = true;
      }
    }

    /** Gets the value of the 'key' field */
    public java.lang.Integer getKey() {
      return key;
    }

    /** Sets the value of the 'key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setKey(java.lang.Integer value) {
      validate(fields()[0], value);
      this.key = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /** Checks whether the 'key' field has been set */
    public boolean hasKey() {
      return fieldSetFlags()[0];
    }

    /** Clears the value of the 'key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearKey() {
      key = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'dataset_key' field */
    public java.lang.String getDatasetKey() {
      return dataset_key;
    }

    /** Sets the value of the 'dataset_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setDatasetKey(java.lang.String value) {
      validate(fields()[1], value);
      this.dataset_key = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /** Checks whether the 'dataset_key' field has been set */
    public boolean hasDatasetKey() {
      return fieldSetFlags()[1];
    }

    /** Clears the value of the 'dataset_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearDatasetKey() {
      dataset_key = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'institution_code' field */
    public java.lang.String getInstitutionCode() {
      return institution_code;
    }

    /** Sets the value of the 'institution_code' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setInstitutionCode(java.lang.String value) {
      validate(fields()[2], value);
      this.institution_code = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /** Checks whether the 'institution_code' field has been set */
    public boolean hasInstitutionCode() {
      return fieldSetFlags()[2];
    }

    /** Clears the value of the 'institution_code' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearInstitutionCode() {
      institution_code = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'collection_code' field */
    public java.lang.String getCollectionCode() {
      return collection_code;
    }

    /** Sets the value of the 'collection_code' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setCollectionCode(java.lang.String value) {
      validate(fields()[3], value);
      this.collection_code = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /** Checks whether the 'collection_code' field has been set */
    public boolean hasCollectionCode() {
      return fieldSetFlags()[3];
    }

    /** Clears the value of the 'collection_code' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearCollectionCode() {
      collection_code = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'catalog_number' field */
    public java.lang.String getCatalogNumber() {
      return catalog_number;
    }

    /** Sets the value of the 'catalog_number' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setCatalogNumber(java.lang.String value) {
      validate(fields()[4], value);
      this.catalog_number = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /** Checks whether the 'catalog_number' field has been set */
    public boolean hasCatalogNumber() {
      return fieldSetFlags()[4];
    }

    /** Clears the value of the 'catalog_number' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearCatalogNumber() {
      catalog_number = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'recorded_by' field */
    public java.lang.String getRecordedBy() {
      return recorded_by;
    }

    /** Sets the value of the 'recorded_by' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setRecordedBy(java.lang.String value) {
      validate(fields()[5], value);
      this.recorded_by = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /** Checks whether the 'recorded_by' field has been set */
    public boolean hasRecordedBy() {
      return fieldSetFlags()[5];
    }

    /** Clears the value of the 'recorded_by' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearRecordedBy() {
      recorded_by = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'record_number' field */
    public java.lang.String getRecordNumber() {
      return record_number;
    }

    /** Sets the value of the 'record_number' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setRecordNumber(java.lang.String value) {
      validate(fields()[6], value);
      this.record_number = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /** Checks whether the 'record_number' field has been set */
    public boolean hasRecordNumber() {
      return fieldSetFlags()[6];
    }

    /** Clears the value of the 'record_number' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearRecordNumber() {
      record_number = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'last_interpreted' field */
    public java.lang.String getLastInterpreted() {
      return last_interpreted;
    }

    /** Sets the value of the 'last_interpreted' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setLastInterpreted(java.lang.String value) {
      validate(fields()[7], value);
      this.last_interpreted = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /** Checks whether the 'last_interpreted' field has been set */
    public boolean hasLastInterpreted() {
      return fieldSetFlags()[7];
    }

    /** Clears the value of the 'last_interpreted' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearLastInterpreted() {
      last_interpreted = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'taxon_key' field */
    public java.util.List<java.lang.Integer> getTaxonKey() {
      return taxon_key;
    }

    /** Sets the value of the 'taxon_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setTaxonKey(java.util.List<java.lang.Integer> value) {
      validate(fields()[8], value);
      this.taxon_key = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /** Checks whether the 'taxon_key' field has been set */
    public boolean hasTaxonKey() {
      return fieldSetFlags()[8];
    }

    /** Clears the value of the 'taxon_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearTaxonKey() {
      taxon_key = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'kingdom_key' field */
    public java.lang.Integer getKingdomKey() {
      return kingdom_key;
    }

    /** Sets the value of the 'kingdom_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setKingdomKey(java.lang.Integer value) {
      validate(fields()[9], value);
      this.kingdom_key = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /** Checks whether the 'kingdom_key' field has been set */
    public boolean hasKingdomKey() {
      return fieldSetFlags()[9];
    }

    /** Clears the value of the 'kingdom_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearKingdomKey() {
      kingdom_key = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'phylum_key' field */
    public java.lang.Integer getPhylumKey() {
      return phylum_key;
    }

    /** Sets the value of the 'phylum_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setPhylumKey(java.lang.Integer value) {
      validate(fields()[10], value);
      this.phylum_key = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /** Checks whether the 'phylum_key' field has been set */
    public boolean hasPhylumKey() {
      return fieldSetFlags()[10];
    }

    /** Clears the value of the 'phylum_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearPhylumKey() {
      phylum_key = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'class_key' field */
    public java.lang.Integer getClassKey() {
      return class_key;
    }

    /** Sets the value of the 'class_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setClassKey(java.lang.Integer value) {
      validate(fields()[11], value);
      this.class_key = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /** Checks whether the 'class_key' field has been set */
    public boolean hasClassKey() {
      return fieldSetFlags()[11];
    }

    /** Clears the value of the 'class_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearClassKey() {
      class_key = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'order_key' field */
    public java.lang.Integer getOrderKey() {
      return order_key;
    }

    /** Sets the value of the 'order_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setOrderKey(java.lang.Integer value) {
      validate(fields()[12], value);
      this.order_key = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /** Checks whether the 'order_key' field has been set */
    public boolean hasOrderKey() {
      return fieldSetFlags()[12];
    }

    /** Clears the value of the 'order_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearOrderKey() {
      order_key = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'family_key' field */
    public java.lang.Integer getFamilyKey() {
      return family_key;
    }

    /** Sets the value of the 'family_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setFamilyKey(java.lang.Integer value) {
      validate(fields()[13], value);
      this.family_key = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /** Checks whether the 'family_key' field has been set */
    public boolean hasFamilyKey() {
      return fieldSetFlags()[13];
    }

    /** Clears the value of the 'family_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearFamilyKey() {
      family_key = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'genus_key' field */
    public java.lang.Integer getGenusKey() {
      return genus_key;
    }

    /** Sets the value of the 'genus_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setGenusKey(java.lang.Integer value) {
      validate(fields()[14], value);
      this.genus_key = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /** Checks whether the 'genus_key' field has been set */
    public boolean hasGenusKey() {
      return fieldSetFlags()[14];
    }

    /** Clears the value of the 'genus_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearGenusKey() {
      genus_key = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'subgenus_key' field */
    public java.lang.Integer getSubgenusKey() {
      return subgenus_key;
    }

    /** Sets the value of the 'subgenus_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setSubgenusKey(java.lang.Integer value) {
      validate(fields()[15], value);
      this.subgenus_key = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /** Checks whether the 'subgenus_key' field has been set */
    public boolean hasSubgenusKey() {
      return fieldSetFlags()[15];
    }

    /** Clears the value of the 'subgenus_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearSubgenusKey() {
      subgenus_key = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'species_key' field */
    public java.lang.Integer getSpeciesKey() {
      return species_key;
    }

    /** Sets the value of the 'species_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setSpeciesKey(java.lang.Integer value) {
      validate(fields()[16], value);
      this.species_key = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /** Checks whether the 'species_key' field has been set */
    public boolean hasSpeciesKey() {
      return fieldSetFlags()[16];
    }

    /** Clears the value of the 'species_key' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearSpeciesKey() {
      species_key = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'country' field */
    public java.lang.String getCountry() {
      return country;
    }

    /** Sets the value of the 'country' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setCountry(java.lang.String value) {
      validate(fields()[17], value);
      this.country = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /** Checks whether the 'country' field has been set */
    public boolean hasCountry() {
      return fieldSetFlags()[17];
    }

    /** Clears the value of the 'country' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearCountry() {
      country = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'continent' field */
    public java.lang.String getContinent() {
      return continent;
    }

    /** Sets the value of the 'continent' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setContinent(java.lang.String value) {
      validate(fields()[18], value);
      this.continent = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /** Checks whether the 'continent' field has been set */
    public boolean hasContinent() {
      return fieldSetFlags()[18];
    }

    /** Clears the value of the 'continent' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearContinent() {
      continent = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'publishing_country' field */
    public java.lang.String getPublishingCountry() {
      return publishing_country;
    }

    /** Sets the value of the 'publishing_country' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setPublishingCountry(java.lang.String value) {
      validate(fields()[19], value);
      this.publishing_country = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /** Checks whether the 'publishing_country' field has been set */
    public boolean hasPublishingCountry() {
      return fieldSetFlags()[19];
    }

    /** Clears the value of the 'publishing_country' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearPublishingCountry() {
      publishing_country = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'latitude' field */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    /** Sets the value of the 'latitude' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setLatitude(java.lang.Double value) {
      validate(fields()[20], value);
      this.latitude = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /** Checks whether the 'latitude' field has been set */
    public boolean hasLatitude() {
      return fieldSetFlags()[20];
    }

    /** Clears the value of the 'latitude' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearLatitude() {
      latitude = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'longitude' field */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    /** Sets the value of the 'longitude' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setLongitude(java.lang.Double value) {
      validate(fields()[21], value);
      this.longitude = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /** Checks whether the 'longitude' field has been set */
    public boolean hasLongitude() {
      return fieldSetFlags()[21];
    }

    /** Clears the value of the 'longitude' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearLongitude() {
      longitude = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'coordinate' field */
    public java.lang.String getCoordinate() {
      return coordinate;
    }

    /** Sets the value of the 'coordinate' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setCoordinate(java.lang.String value) {
      validate(fields()[22], value);
      this.coordinate = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /** Checks whether the 'coordinate' field has been set */
    public boolean hasCoordinate() {
      return fieldSetFlags()[22];
    }

    /** Clears the value of the 'coordinate' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearCoordinate() {
      coordinate = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'year' field */
    public java.lang.Integer getYear() {
      return year;
    }

    /** Sets the value of the 'year' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setYear(java.lang.Integer value) {
      validate(fields()[23], value);
      this.year = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /** Checks whether the 'year' field has been set */
    public boolean hasYear() {
      return fieldSetFlags()[23];
    }

    /** Clears the value of the 'year' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearYear() {
      year = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'month' field */
    public java.lang.Integer getMonth() {
      return month;
    }

    /** Sets the value of the 'month' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setMonth(java.lang.Integer value) {
      validate(fields()[24], value);
      this.month = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /** Checks whether the 'month' field has been set */
    public boolean hasMonth() {
      return fieldSetFlags()[24];
    }

    /** Clears the value of the 'month' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearMonth() {
      month = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'event_date' field */
    public java.lang.String getEventDate() {
      return event_date;
    }

    /** Sets the value of the 'event_date' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setEventDate(java.lang.String value) {
      validate(fields()[25], value);
      this.event_date = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /** Checks whether the 'event_date' field has been set */
    public boolean hasEventDate() {
      return fieldSetFlags()[25];
    }

    /** Clears the value of the 'event_date' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearEventDate() {
      event_date = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'basis_of_record' field */
    public java.lang.String getBasisOfRecord() {
      return basis_of_record;
    }

    /** Sets the value of the 'basis_of_record' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setBasisOfRecord(java.lang.String value) {
      validate(fields()[26], value);
      this.basis_of_record = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /** Checks whether the 'basis_of_record' field has been set */
    public boolean hasBasisOfRecord() {
      return fieldSetFlags()[26];
    }

    /** Clears the value of the 'basis_of_record' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearBasisOfRecord() {
      basis_of_record = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'type_status' field */
    public java.lang.String getTypeStatus() {
      return type_status;
    }

    /** Sets the value of the 'type_status' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setTypeStatus(java.lang.String value) {
      validate(fields()[27], value);
      this.type_status = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /** Checks whether the 'type_status' field has been set */
    public boolean hasTypeStatus() {
      return fieldSetFlags()[27];
    }

    /** Clears the value of the 'type_status' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearTypeStatus() {
      type_status = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'spatial_issues' field */
    public java.lang.Boolean getSpatialIssues() {
      return spatial_issues;
    }

    /** Sets the value of the 'spatial_issues' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setSpatialIssues(java.lang.Boolean value) {
      validate(fields()[28], value);
      this.spatial_issues = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /** Checks whether the 'spatial_issues' field has been set */
    public boolean hasSpatialIssues() {
      return fieldSetFlags()[28];
    }

    /** Clears the value of the 'spatial_issues' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearSpatialIssues() {
      spatial_issues = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'has_coordinate' field */
    public java.lang.Boolean getHasCoordinate() {
      return has_coordinate;
    }

    /** Sets the value of the 'has_coordinate' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setHasCoordinate(java.lang.Boolean value) {
      validate(fields()[29], value);
      this.has_coordinate = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /** Checks whether the 'has_coordinate' field has been set */
    public boolean hasHasCoordinate() {
      return fieldSetFlags()[29];
    }

    /** Clears the value of the 'has_coordinate' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearHasCoordinate() {
      has_coordinate = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'elevation' field */
    public java.lang.Integer getElevation() {
      return elevation;
    }

    /** Sets the value of the 'elevation' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setElevation(java.lang.Integer value) {
      validate(fields()[30], value);
      this.elevation = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /** Checks whether the 'elevation' field has been set */
    public boolean hasElevation() {
      return fieldSetFlags()[30];
    }

    /** Clears the value of the 'elevation' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearElevation() {
      elevation = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'depth' field */
    public java.lang.Integer getDepth() {
      return depth;
    }

    /** Sets the value of the 'depth' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setDepth(java.lang.Integer value) {
      validate(fields()[31], value);
      this.depth = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /** Checks whether the 'depth' field has been set */
    public boolean hasDepth() {
      return fieldSetFlags()[31];
    }

    /** Clears the value of the 'depth' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearDepth() {
      depth = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /** Gets the value of the 'establishment_means' field */
    public java.lang.String getEstablishmentMeans() {
      return establishment_means;
    }

    /** Sets the value of the 'establishment_means' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setEstablishmentMeans(java.lang.String value) {
      validate(fields()[32], value);
      this.establishment_means = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /** Checks whether the 'establishment_means' field has been set */
    public boolean hasEstablishmentMeans() {
      return fieldSetFlags()[32];
    }

    /** Clears the value of the 'establishment_means' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearEstablishmentMeans() {
      establishment_means = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /** Gets the value of the 'occurrence_id' field */
    public java.lang.String getOccurrenceId() {
      return occurrence_id;
    }

    /** Sets the value of the 'occurrence_id' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setOccurrenceId(java.lang.String value) {
      validate(fields()[33], value);
      this.occurrence_id = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /** Checks whether the 'occurrence_id' field has been set */
    public boolean hasOccurrenceId() {
      return fieldSetFlags()[33];
    }

    /** Clears the value of the 'occurrence_id' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearOccurrenceId() {
      occurrence_id = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /** Gets the value of the 'media_type' field */
    public java.util.List<java.lang.String> getMediaType() {
      return media_type;
    }

    /** Sets the value of the 'media_type' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setMediaType(java.util.List<java.lang.String> value) {
      validate(fields()[34], value);
      this.media_type = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /** Checks whether the 'media_type' field has been set */
    public boolean hasMediaType() {
      return fieldSetFlags()[34];
    }

    /** Clears the value of the 'media_type' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearMediaType() {
      media_type = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /** Gets the value of the 'issue' field */
    public java.util.List<java.lang.String> getIssue() {
      return issue;
    }

    /** Sets the value of the 'issue' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setIssue(java.util.List<java.lang.String> value) {
      validate(fields()[35], value);
      this.issue = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /** Checks whether the 'issue' field has been set */
    public boolean hasIssue() {
      return fieldSetFlags()[35];
    }

    /** Clears the value of the 'issue' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearIssue() {
      issue = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /** Gets the value of the 'scientific_name' field */
    public java.lang.String getScientificName() {
      return scientific_name;
    }

    /** Sets the value of the 'scientific_name' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setScientificName(java.lang.String value) {
      validate(fields()[36], value);
      this.scientific_name = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /** Checks whether the 'scientific_name' field has been set */
    public boolean hasScientificName() {
      return fieldSetFlags()[36];
    }

    /** Clears the value of the 'scientific_name' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearScientificName() {
      scientific_name = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /** Gets the value of the 'full_text' field */
    public java.util.List<java.lang.String> getFullText() {
      return full_text;
    }

    /** Sets the value of the 'full_text' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder setFullText(java.util.List<java.lang.String> value) {
      validate(fields()[37], value);
      this.full_text = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /** Checks whether the 'full_text' field has been set */
    public boolean hasFullText() {
      return fieldSetFlags()[37];
    }

    /** Clears the value of the 'full_text' field */
    public org.gbif.occurrence.avro.model.Occurrence.Builder clearFullText() {
      full_text = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    @Override
    public Occurrence build() {
      try {
        Occurrence record = new Occurrence();
        record.key = fieldSetFlags()[0] ? this.key : (java.lang.Integer) defaultValue(fields()[0]);
        record.dataset_key = fieldSetFlags()[1] ? this.dataset_key : (java.lang.String) defaultValue(fields()[1]);
        record.institution_code = fieldSetFlags()[2] ? this.institution_code : (java.lang.String) defaultValue(fields()[2]);
        record.collection_code = fieldSetFlags()[3] ? this.collection_code : (java.lang.String) defaultValue(fields()[3]);
        record.catalog_number = fieldSetFlags()[4] ? this.catalog_number : (java.lang.String) defaultValue(fields()[4]);
        record.recorded_by = fieldSetFlags()[5] ? this.recorded_by : (java.lang.String) defaultValue(fields()[5]);
        record.record_number = fieldSetFlags()[6] ? this.record_number : (java.lang.String) defaultValue(fields()[6]);
        record.last_interpreted = fieldSetFlags()[7] ? this.last_interpreted : (java.lang.String) defaultValue(fields()[7]);
        record.taxon_key = fieldSetFlags()[8] ? this.taxon_key : (java.util.List<java.lang.Integer>) defaultValue(fields()[8]);
        record.kingdom_key = fieldSetFlags()[9] ? this.kingdom_key : (java.lang.Integer) defaultValue(fields()[9]);
        record.phylum_key = fieldSetFlags()[10] ? this.phylum_key : (java.lang.Integer) defaultValue(fields()[10]);
        record.class_key = fieldSetFlags()[11] ? this.class_key : (java.lang.Integer) defaultValue(fields()[11]);
        record.order_key = fieldSetFlags()[12] ? this.order_key : (java.lang.Integer) defaultValue(fields()[12]);
        record.family_key = fieldSetFlags()[13] ? this.family_key : (java.lang.Integer) defaultValue(fields()[13]);
        record.genus_key = fieldSetFlags()[14] ? this.genus_key : (java.lang.Integer) defaultValue(fields()[14]);
        record.subgenus_key = fieldSetFlags()[15] ? this.subgenus_key : (java.lang.Integer) defaultValue(fields()[15]);
        record.species_key = fieldSetFlags()[16] ? this.species_key : (java.lang.Integer) defaultValue(fields()[16]);
        record.country = fieldSetFlags()[17] ? this.country : (java.lang.String) defaultValue(fields()[17]);
        record.continent = fieldSetFlags()[18] ? this.continent : (java.lang.String) defaultValue(fields()[18]);
        record.publishing_country = fieldSetFlags()[19] ? this.publishing_country : (java.lang.String) defaultValue(fields()[19]);
        record.latitude = fieldSetFlags()[20] ? this.latitude : (java.lang.Double) defaultValue(fields()[20]);
        record.longitude = fieldSetFlags()[21] ? this.longitude : (java.lang.Double) defaultValue(fields()[21]);
        record.coordinate = fieldSetFlags()[22] ? this.coordinate : (java.lang.String) defaultValue(fields()[22]);
        record.year = fieldSetFlags()[23] ? this.year : (java.lang.Integer) defaultValue(fields()[23]);
        record.month = fieldSetFlags()[24] ? this.month : (java.lang.Integer) defaultValue(fields()[24]);
        record.event_date = fieldSetFlags()[25] ? this.event_date : (java.lang.String) defaultValue(fields()[25]);
        record.basis_of_record = fieldSetFlags()[26] ? this.basis_of_record : (java.lang.String) defaultValue(fields()[26]);
        record.type_status = fieldSetFlags()[27] ? this.type_status : (java.lang.String) defaultValue(fields()[27]);
        record.spatial_issues = fieldSetFlags()[28] ? this.spatial_issues : (java.lang.Boolean) defaultValue(fields()[28]);
        record.has_coordinate = fieldSetFlags()[29] ? this.has_coordinate : (java.lang.Boolean) defaultValue(fields()[29]);
        record.elevation = fieldSetFlags()[30] ? this.elevation : (java.lang.Integer) defaultValue(fields()[30]);
        record.depth = fieldSetFlags()[31] ? this.depth : (java.lang.Integer) defaultValue(fields()[31]);
        record.establishment_means = fieldSetFlags()[32] ? this.establishment_means : (java.lang.String) defaultValue(fields()[32]);
        record.occurrence_id = fieldSetFlags()[33] ? this.occurrence_id : (java.lang.String) defaultValue(fields()[33]);
        record.media_type = fieldSetFlags()[34] ? this.media_type : (java.util.List<java.lang.String>) defaultValue(fields()[34]);
        record.issue = fieldSetFlags()[35] ? this.issue : (java.util.List<java.lang.String>) defaultValue(fields()[35]);
        record.scientific_name = fieldSetFlags()[36] ? this.scientific_name : (java.lang.String) defaultValue(fields()[36]);
        record.full_text = fieldSetFlags()[37] ? this.full_text : (java.util.List<java.lang.String>) defaultValue(fields()[37]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
